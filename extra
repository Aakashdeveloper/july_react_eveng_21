https://code.visualstudio.com/download
https://nodejs.org/en/
https://github.com/

Npm
React = 3
Mock API
json-server
React-JWT(Login Logout)-2
Github
Depolyment
-> MERN
-> Nginx
-> Docker
-> heroku
-> Aws
React-GraphQL-1
///////////////
React_hooks -1

Basic React Native=1

React-Redux =1
React-Redux =1
Testing Jest Enzime

//walkthrough
React-Saga -1
React-with-typescript-1
--------NOT Backend--------------
API
GraphQL
Login/Logout

React is a frontend lib/framework that help to build single page application
using component base structures

open source
npm > node package manager

////////////////////////////////////////////////////////////////
JSON > JavaScript Object Notation
[
    {
        name:'John',
        class:'Ui'
    },
    {
        name:'Rahul',
        class:'React',
        city:'Delhi'
    }
]

//////////////////////

package.json
> Entry point to the application.json
> meta data(name,description,version)
> Packages
> script(start,build,test)

> vscodeicon
> gitlens
> git history
> eslint
> tabnine
> auto close tag


//////////////////////
Step To generate package.json
////////////////
**NodeJS must be install in system
> go inside the folder using cmd/terminal
> npm init
> answer all questions
> type yes

//////////////////////
Step To install package
////////////////
**NodeJS must be install in system
> go inside the folder using cmd/terminal
> npm i packagename /npm i packagename --save /npm install packagename 

//////////////////////
Step To generate react app
//////////////////////
// for office laptop
**NodeJS must be install in system
> go inside the folder using cmd
> npx create-react-app appname

// for windows
>>>>One time step<<<<<<<
> open cmd as administrator
> npm i -g create-react-app

>>>>Next all time you want app<<<<<<<
> go inside the folder using cmd
> create-react-app appname


// for mac/linux
>>>>One time step<<<<<<<
> open terminal
> sudo npm i -g create-react-app

>>>>Next all time you want app<<<<<<<
> go inside the folder using cmd
> create-react-app appname

//////////////////////
Step To run react app
//////////////////////
> go inside the folder using cmd
> npm start
> localhost:3000

///////////
react > main lib or package
react-dom > help to load content on browser
react-script> help to run the app 

//es5
function add(a,b){
    return a+b
}

//es6
const add = (a,b) => {
    return a+b
}

/////////
npm i @babel/core @babel/preset-env @babel/register
function add(a,b){
    var out = [a,b]
    return out
}

add(1,2)
[1,2]


function add(a,b){
    return a,b
}

add(1,2)
2

///////////////
class 
> Logical Component
> call Api, data interaction, display
> you can maintain state in class

functional
> Dumb component
> use for display purpose
> we cannot maintain state

Hooks


state
> mutable( we can update the value of state)
> any data interaction will happen through state only
> local variable

props 
> help to transfer the data between 2 nested component
> we cannot update the value of props (immutable)


function add(a,b){

}

// JavaScript
ternory operator
map
filter
indexof


>>>>>>>>>><<<<<<
var a = [2,3,5,6,7,3,2,4,6,7,9,4]
a.map((data) => {return data*2})
[4, 6, 10, 12, 14, 6, 4, 8, 12, 14, 18, 8]

var a = [2,3,5,6,7,3,2,4,6,7,9,4]
a.filter((data) => {return data>5})
[6, 7, 6, 7, 9]

var a = ["delhi","mumbai","amsterdam","venice"]
a.indexOf('mumbai')
1
a.indexOf('venice')
3
a.indexOf('paris')
-1
a.indexOf('london')
-1
a.indexOf('delhi')
0

var a = [0,1,2,3]
a.filter((data) => {return data*2})
[1, 2, 3]

parent => child (props)
child => parent (props with function)

//parent
function add(a,b){
    return a+b
}

//child
add(1,2)

//////////
params / (complusory to define)
queryParams ? (optional)

history > redirection
location > queryParams
match > params

(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1

(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/4?roomtype=1

(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500

(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) quickSearch>    https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook

///dummy api////
npm i -g json-server
json-server --watch booking.json --port 8900


var a = "?status=TXN_SUCCESS&ORDERID=TEST_7029&date=2021-07-28%2019:27:05.0&bank=Punjab%20National%20Bank"
undefined
a.split('&')
(4) ["?status=TXN_SUCCESS", "ORDERID=TEST_7029", "date=2021-07-28%2019:27:05.0", "bank=Punjab%20National%20Bank"]0: "?status=TXN_SUCCESS"1: "ORDERID=TEST_7029"2: "date=2021-07-28%2019:27:05.0"3: "bank=Punjab%20National%20Bank"length: 4[[Prototype]]: Array(0)
a.split('&')[0]
"?status=TXN_SUCCESS"
a.split('&')[0].split('=')
(2) ["?status", "TXN_SUCCESS"]0: "?status"1: "TXN_SUCCESS"length: 2[[Prototype]]: Array(0)
a.split('&')[0].split('=')[1]
"TXN_SUCCESS"
a.split('&')[1].split('=')[1]
"TEST_7029"
a.split('&')[2].split('=')[1]
"2021-07-28%2019:27:05.0"
a.split('&')[3].split('=')[1]
"Punjab%20National%20Bank"


/////////////
/******GetAllUser*****/
(GET)> https://developerjwt.herokuapp.com/api/auth/users

/******Register*****/
(POST)> https://developerjwt.herokuapp.com/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role?":"user"}


/******Login*****/
(POST) => https://developerjwt.herokuapp.com/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => https://developerjwt.herokuapp.com/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}

https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps

/////first time from new folder////
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/testgit.git
git push -u origin master


git add .
git commit -m "first commit"
git push

git checkout -b branchname


npm run build


docker build . -t appname
docker run -p 3000:5800 appname

npm i apollo-boost apollo-graphql graphql graphql-tag react-apollo


///////////
npm i -g create-react-native-app
create-react-native-app mymobi

cd mymobi
npm run web

in mobile download 'expo' app